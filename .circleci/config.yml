version: 2.1

orbs:
  slack: circleci/slack@4.12.0
     
commands:
  notify_on_failure:
    steps:  
    - slack/notify:
          event: fail
          channel: cicd-pipeline
          template: basic_fail_1



jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend # go to frontend directory
            npm install # install dependencies
            npm run build # build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - notify_on_failure 
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
             cd backend # go to backend directory
             npm install # install dependencies
             npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
      - notify_on_failure
  test-frontend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout # check out
        - restore_cache: 
            keys: [frontend-build]
        - run: 
            name: Run frontend utest
            command: |
              cd frontend # go to frontend directory
              npm install # install dependencies
              npm run test # test-frontend       
        - notify_on_failure

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout # check out
    - restore_cache: 
        keys: [backend-build]
    - run: 
          name: Run backend utest
          command: |
            cd backend # go to backend directory
            npm install # install dependencies
            npm run test # test-backend   
            npm audit fix
    - notify_on_failure

  scan-frontend:
      docker:
        - image: circleci/node:13.8.0 # Docker image here
      steps:
      - checkout # check out
      - restore_cache: 
          keys: [backend-build]
      - run:
            name: Run frontend vulnerability scan
            command: |
              cd frontend
              npm install
              npm audit fix --audit-level=critical --force
              npm update minimist --depth 4
              npm update loader-utils --depth 2
              npm audit --audit-level=critical --force
      - notify_on_failure
      
  scan-backend:
    docker:
      - image: circleci/node:13.8.0 # Docker image here
    steps:
    - checkout # check out
    - restore_cache: 
        keys: [backend-build]
    - run:
          name: Run frontend vulnerability scan
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm update minimist --depth 4
            npm update loader-utils --depth 2
            npm audit --audit-level=critical --force
    - notify_on_failure
    

    notify_on_pass:
      docker: 
        -image: cimg/base
      steps: 
        - slack/notify:
          event: pass
          channel: cicd-pipeline
          template: success_tagged_deployment_1


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - notify_on_pass:
          requires: 
            - build-frontend 
            - build-backend 
            - test-frontend 
            - test-backend 
            - scan-backend 
            - scan-frontend]
